<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0">Edit Product</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item active">Edit product</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->

    <!-- Main content -->
    <section class="content ">
        <!-- left column -->
        <div class="row col-md-12 justify-content-center align-items-center">
            <!-- jquery validation -->
            <div class="card card-primary col-md-6">
                <div class="card-header">
                    <h3 class="card-title">Enter the form below to edit product</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <form id="quickForm" method="get" action="/product/list-products">
                    <div class="card-body">
                        <div class="form-group">
                            <label>Product name</label>
                            <input type="text"  id="product-name" value="{{product.product_name}}"
                                class="form-control" placeholder="Enter name">
                        </div>

                        <div class="form-group category">
                            <label>Category</label>
                            <select id="category"  class="form-control  select2bs4" style="width: 100%;">
                                {{#each categories}}
                                <option value="{{this.category_id}}">{{this.category_name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group brand">
                            <label>Brand</label>
                            <select id="brand"  class="form-control  select2bs4" style="width: 100%;">

                                {{#each brands}}
                                <option value="{{this.brand_id}}">{{this.brand_name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Quantity</label>
                            <input type="number" id="quantity" class="form-control" value="{{product.quantity}}"
                                placeholder="100">
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Price</label>
                            <input type="number" id="price" class="form-control" value="{{product.price}}"
                                placeholder="20000">
                        </div>

                        <div class="form-group">
                            <label class="photos-label">Photos</label>
                            <input id="photo-upload" type="file" multiple />
                            <div id="photo-upload__preview" class="upload-preview"></div>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword1 " class="label-description">Description</label>

                            <textarea class="summernote"  id="summernote" required
                                data-msg="Please write something :)">{{product.description}}</textarea>
                        </div>
                    </div>
                    <!-- /.card-body -->
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </form>
            </div>
            <!-- /.card -->
        </div>
        <!--/.col (left) -->
        <!-- right column -->
        <div class="col-md-6">

        </div>
        <!--/.col (right) -->

        <!-- /.row (main row) -->

    </section>
    <!-- /.content -->
</div>
<!-- jQuery -->
<script src="../../plugins/jquery/jquery.min.js"></script>
<!-- Bootstrap 4 -->
<script src="../../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Select2 -->
<script src="../../plugins/select2/js/select2.full.min.js"></script>
<!-- Bootstrap4 Duallistbox -->
<script src="../../plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
<!-- InputMask -->
<script src="../../plugins/moment/moment.min.js"></script>
<script src="../../plugins/inputmask/jquery.inputmask.min.js"></script>
<!-- date-range-picker -->
<script src="../../plugins/daterangepicker/daterangepicker.js"></script>
<!-- bootstrap color picker -->
<script src="../../plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
<!-- Tempusdominus Bootstrap 4 -->
<script src="../../plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<!-- Bootstrap Switch -->
<script src="../../plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
<!-- BS-Stepper -->
<script src="../../plugins/bs-stepper/js/bs-stepper.min.js"></script>
<!-- dropzonejs -->
<script src="../../plugins/dropzone/min/dropzone.min.js"></script>
<!-- jquery-validation -->
<script src="../../plugins/jquery-validation/jquery.validate.min.js"></script>
<script src="../../plugins/jquery-validation/additional-methods.min.js"></script>


<script src="../../plugins/summernote/summernote-bs4.css"></script>
<script src="../../plugins/summernote/summernote-bs4.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

{{!-- image --}}
<script type="text/javascript" src="../../dist/js/image-uploader.min.js"></script>
<link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="../../dist/css/image-uploader.min.css">
<style>
    /* For summernote override unordered and order list */
    .note-editable ul {
        list-style: disc !important;
        list-style-position: inside !important;
    }

    .note-editable ol {
        list-style: decimal !important;
        list-style-position: inside !important;
    }

    /* form upload image*/
</style>
<style>
    /* css form upload images */
    .item-images {
        display: flex;
        flex-wrap: wrap;
        flex-direction: row;
    }

    .item-photo__preview {
        width: 100px;
        height: 100px;

    }

    .delete {
        width: 20px;
        height: 18px;
        position: absolute;

        display: flex;
        justify-content: center;
        align-items: center;
        background-color: rgb(93, 103, 112);
        margin-top: -22px;
        margin-left: 75px;
        cursor: pointer;
        color: red;
    }
</style>

<script>
    $(function () {
        //Initialize Select2 Elements
        $('.select2').select2()

        //Initialize Select2 Elements
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        })
        //set brand form edit
        $("div.brand select").val({{ product.brand_id }}).change();
    //set brand form edit
    $("div.category select").val({{ product.category_id }}).change();

    // set image upload form
    function previewImage(e, selectedFiles, imagesArray) {
        const elemContainer = document.createElement('div');
        elemContainer.setAttribute('class', 'item-images');

        for (let i = 0; i < selectedFiles.length; i++) {
            imagesArray.push(selectedFiles[i]);
            const imageContainer = document.createElement('div');
            const elem = document.createElement('img');
            elem.setAttribute('src', URL.createObjectURL(selectedFiles[i]));
            elem.setAttribute('class', 'item-photo__preview')
            const removeButton = document.createElement('button');

            removeButton.setAttribute('type', 'button');
            removeButton.classList.add('delete');
            removeButton.dataset.filename = selectedFiles[i].name,
                removeButton.innerHTML = '<span>&times;</span>';
            imageContainer.style.margin = "5px";
            imageContainer.appendChild(elem);
            imageContainer.appendChild(removeButton);
            elemContainer.appendChild(imageContainer);
        }
        return elemContainer;
    }
    let item_images = [];
    document.getElementById('photo-upload').addEventListener('change', (e) => {
        let selectedFiles = e.target.files;
        const photoPreviewContainer = document.querySelector('#photo-upload__preview');
        const elemContainer = previewImage(e, selectedFiles, item_images);
        photoPreviewContainer.appendChild(elemContainer);
        console.log(item_images);
    });

    document.getElementById('photo-upload__preview').addEventListener('click', (e) => {
        const tgt = e.target.closest('button');
        if (tgt.classList.contains('delete')) {
            tgt.closest('div').remove();
            const fileName = tgt.dataset.filename
            item_images = item_images.filter(img => img.name != fileName)

            console.log(item_images)
        }
    })
    //  $('.input-images-1').imageUploader();
    let preloaded = [
        { id: 1, src: 'https://picsum.photos/500/500?random=1' },
        { id: 2, src: 'https://picsum.photos/500/500?random=2' },
        { id: 3, src: 'https://picsum.photos/500/500?random=3' },
        { id: 4, src: 'https://picsum.photos/500/500?random=4' },
        { id: 5, src: 'https://picsum.photos/500/500?random=5' },
        { id: 6, src: 'https://picsum.photos/500/500?random=6' },
    ];

    $('.input-images-1').imageUploader({
        preloaded: preloaded,
        imagesInputName: 'photos',
        preloadedInputName: 'old'
    });
    //Initialize Summernote
    $('#summernote').summernote({
        placeholder: 'Please enter content :)',

        tabsize: 2,
        height: 100,
        fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New', 'Helvetica', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana', 'Roboto'],
        fontNamesIgnoreCheck: ['Roboto'],
        followingToolbar: false,
        dialogsInBody: true,
        toolbar: [
            // [groupName, [list of button]]
            ['style', ['bold', 'italic', 'underline', 'clear']],
            ['font', ['strikethrough', 'superscript', 'subscript']],
            ['fontname', ['fontname']],
            ['fontsize', ['fontsize']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video']],
            ['view', ['fullscreen', 'codeview', 'help']],
        ],

    });
    $('summernote')
        .summernote()
        .on('summernote.change', function (customEvent, contents, $editable) {
            // Revalidate the content when its value is changed by Summernote
            fv.revalidateField('content');
        });




    $.validator.setDefaults({

        // fix not display message summernote
        ignore: ':hidden:not(.summernote),.note-editable.card-block',
        submitHandler: async function () {

            // get value
            var product_name = $('#quickForm').find('input[id="product_name"]').val();
            var category_id = $('#quickForm').find('select[id="category"]').val();
            var brand_id = $('#quickForm').find('select[id="brand"]').val();
            var quantity = $('#quickForm').find('input[id="quantity"]').val();
            var price = $('#quickForm').find('input[id="price"]').val();

            var description = $('#summernote').summernote('code');

            var url_origin = location.origin;
            var id = "{{product.product_id}}"
            const url = url_origin + "/product/edit-product/" + id

            async function uploadMultiple(formData) {
                try {
                    const response = await fetch(url, {
                        method: "PUT",

                        body: formData,
                    });
                    const result = await response.json();
                    if (result.status) {
                        swal({
                            title: "Good job!",
                            text: "You edit product success !!!",
                            icon: "success",
                            button: false,
                            timer: 3000,
                        });
                      // go to list products
                        await fetch(url_origin + "/product/list-products/");
                    } else {
                        swal({
                            title: " Fail!",
                            text: result.message,
                            icon: "error",
                        });
                    }
                    console.log("Success:", result);
                } catch (error) {
                    console.error("Error:", error);
                }
            }


            const formData = new FormData();
            formData.append("product_name", product_name);
            formData.append("category_id", category_id);
            formData.append("brand_id", brand_id);
            formData.append("quantity", quantity);
            formData.append("price", price);
            formData.append("description", description);
            for (const [i, photo] of Array.from(item_images).entries()) {
                formData.append("images", photo);

            }

            uploadMultiple(formData);


        }
    });



    $('#quickForm').validate({

        rules: {
            product_name: {
                required: true,
            },
            price: {
                required: true,
            },
            quantity: {
                required: true,
            },
            category: {
                selectcheckcategory: true
            },
            brand: {
                selectcheckbrand: true
            },
            images: {
                checkIsEmtyFile: true,
            }, summernote: {
                checkIsEmtyDes: true,
            },

        },
        messages: {
            product_name: {
                required: "Please enter product name !",

            },
            price: {
                required: "Please enter price !",
            },
            quantity: {
                required: "Please enter quantity !",
            }

        },
        errorElement: 'span',
        errorPlacement: function (error, element) {
            error.addClass('invalid-feedback');
            element.closest('.form-group').append(error);
        },
        highlight: function (element, errorClass, validClass) {
            $(element).addClass('is-invalid');
        },
        unhighlight: function (element, errorClass, validClass) {
            $(element).removeClass('is-invalid');
        }
    });
    jQuery.validator.addMethod('selectcheckcategory', function (value) {
        return (value != '0');
    }, "Select category !");
    jQuery.validator.addMethod('selectcheckbrand', function (value) {
        return (value != '0');
    }, " Select brand !");
    jQuery.validator.addMethod('checkIsEmtyFile', function (value) {

        const photos = document.querySelector('input[type="file"][multiple]');

        return (Object.entries(photos).length != 0);
    }, "  Please choose a file image !!");
    jQuery.validator.addMethod('checkIsEmtyDes', function (value) {
        var isCheck = $('#summernote').summernote('isEmpty');
        return !isCheck;
    }, "  Editor content is empty");



    });


</script>